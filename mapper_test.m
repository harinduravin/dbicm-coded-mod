symbols = {
    1.71317035e-01+1.71317035e-01j, -1.71317035e-01+1.71317035e-01j,...
   -1.71317035e-01-1.71317035e-01j,  1.71317035e-01-1.71317035e-01j,...
    6.64626518e-01+1.78086139e-01j,  4.86540379e-01+4.86540379e-01j,...
    1.78086139e-01+6.64626518e-01j, -1.78086139e-01+6.64626518e-01j,...
   -4.86540379e-01+4.86540379e-01j, -6.64626518e-01+1.78086139e-01j,...
   -6.64626518e-01-1.78086139e-01j, -4.86540379e-01-4.86540379e-01j,...
   -1.78086139e-01-6.64626518e-01j,  1.78086139e-01-6.64626518e-01j,...
    4.86540379e-01-4.86540379e-01j,  6.64626518e-01-1.78086139e-01j,...
    1.17961832e+00+4.88613906e-01j,  9.02840774e-01+9.02840774e-01j,...
    4.88613906e-01+1.17961832e+00j,  7.81820436e-17+1.27680967e+00j,...
   -4.88613906e-01+1.17961832e+00j, -9.02840774e-01+9.02840774e-01j,...
   -1.17961832e+00+4.88613906e-01j, -1.27680967e+00+1.56364087e-16j,...
   -1.17961832e+00-4.88613906e-01j, -9.02840774e-01-9.02840774e-01j,...
   -4.88613906e-01-1.17961832e+00j, -2.34546131e-16-1.27680967e+00j,...
    4.88613906e-01-1.17961832e+00j,  9.02840774e-01-9.02840774e-01j,...
    1.17961832e+00-4.88613906e-01j,  1.27680967e+00-3.12728174e-16j
};

labels = {'10001', '10101', '10111', '10011', '10000', '00000', '00001',...
              '00101', '00100', '10100', '10110', '00110', '00111', '00011',...
              '00010', '10010', '01000', '11001', '01001', '01101', '11101',...
              '01100', '11100', '11110', '01110', '11111', '01111', '01011',...
              '11011', '01010', '11010', '11000'};

ebno = 3;
binaryMatrix = [
    0     0     0     0     0 ...
    0     0     0     0     1 ...
    0     0     0     1     0 ...
    0     0     0     1     1 ...
    0     0     1     0     0 ...
    0     0     1     0     1 ...
    0     0     1     1     0 ...
    0     0     1     1     1 ...
    0     1     0     0     0 ...
    0     1     0     0     1 ...
    0     1     0     1     0 ...
    0     1     0     1     1 ...
    0     1     1     0     0 ...
    0     1     1     0     1 ...
    0     1     1     1     0 ...
    0     1     1     1     1  ...
    1     0     0     0     0 ...
    1     0     0     0     1 ...
    1     0     0     1     0 ...
    1     0     0     1     1 ...
    1     0     1     0     0 ...
    1     0     1     0     1 ...
    1     0     1     1     0 ...
    1     0     1     1     1 ...
    1     1     0     0     0 ...
    1     1     0     0     1 ...
    1     1     0     1     0 ...
    1     1     0     1     1 ...
    1     1     1     0     0 ...
    1     1     1     0     1 ...
    1     1     1     1     0 ...
    1     1     1     1     1
];

complex_numbers = [ 1.71317035e-01-1.71317035e-01j; -1.71317035e-01-1.71317035e-01j];


% obtained_indices = get_indices(1, '1', char(labels));

manual_mod = APSK_32_mapper(binaryMatrix');
auto_mod = dvbsapskmod(binaryMatrix',32,'s2','3/4','InputType','bit','UnitAveragePower',true);

manual_demod = demap_apsk32(manual_mod, symbols, labels, ebno);
% auto_demod =dvbsapskdemod(auto_mod,32,'s2','3/4','OutputType','bit','UnitAveragePower',true);

auto_demod =dvbsapskdemod(auto_mod,32,'s2','3/4','OutputType','llr','NoiseVariance',1/(10*ebno),'UnitAveragePower',true);

function combined_array = demap_apsk32(complex_numbers, symbols, labels, ebno)

    combined_array = zeros(length(complex_numbers)*5,1);
    for i = 1:length(complex_numbers)
        abc = get_all_llr(complex_numbers(i), symbols, labels, ebno);
        combined_array(5*i-4:5*i) = -abc;
    end

end

function indices = get_indices(position, bit_value, labels)
    indices = find(labels(:, position) == bit_value);
end

function eucl_dist = eucl_dist_norm(z1, z2, noise_var)
    real_diff = real(z1) - real(z2);
    imag_diff = imag(z1) - imag(z2);
    squared_diff = real_diff.^2 + imag_diff.^2;
    eucl_dist = -squared_diff / noise_var;
end

function llr = get_llr(complex_number, symbols, labels, noise_var, position)
    llr_1 = get_indices(position, '1', char(labels));
    llr_0 = get_indices(position, '0', char(labels));
    
    symbols_llr_1 = cell2mat(symbols(llr_1));
    symbols_llr_0 = cell2mat(symbols(llr_0));
    
    eucl_llr_1 = eucl_dist_norm(symbols_llr_1, complex_number, noise_var);
    eucl_llr_0 = eucl_dist_norm(symbols_llr_0, complex_number, noise_var);
    
    % Max log approximation
    % llr = max(eucl_llr_1) - max(eucl_llr_0);
    
    % Accurate calculation
    llr = log(sum(exp(eucl_llr_1))) - log(sum(exp(eucl_llr_0)));
end

function llrs = get_all_llr(complex_number, symbols, labels, ebno)
    llrs = zeros(5, 1);

    noise_var = 1 / (10 * ebno);
    for i = 1:5
        llrs(i) = get_llr(complex_number, symbols, labels, noise_var, i);
    end
end


