function output_symbols = APSK_32_mapper(binary_sequence)

    complex_numbers = { 
        0.164079178283360 + 0.164079178283360i,...
        -0.164079178283360 + 0.164079178283360i,...
        -0.164079178283360 - 0.164079178283360i,...
        0.164079178283360 - 0.164079178283360i,...
        0.638788528436365 + 0.171162870328789i,...
        0.467625658107576 + 0.467625658107576i,...
        0.171162870328789 + 0.638788528436365i,...
        -0.171162870328789 + 0.638788528436365i,...
        -0.467625658107576 + 0.467625658107576i,...
        -0.638788528436365 + 0.171162870328789i,...
        -0.638788528436365 - 0.171162870328789i,...
        -0.467625658107576 - 0.467625658107576i,...
        -0.171162870328790 - 0.638788528436365i,...
        0.171162870328789 - 0.638788528436365i,...
        0.467625658107576 - 0.467625658107576i,...
        0.638788528436365 - 0.171162870328790i,...
        1.26309318727039 + 0.251244856101071i,...
        1.07079869947673 + 0.715484816502116i,...
        0.715484816502116 + 1.07079869947673i,...
        0.251244856101071 + 1.26309318727039i,...
        -0.251244856101070 + 1.26309318727039i,...
        -0.715484816502115 + 1.07079869947673i,...
        -1.07079869947673 + 0.715484816502116i,...
        -1.26309318727039 + 0.251244856101071i,...
        -1.26309318727039 - 0.251244856101071i,...
        -1.07079869947673 - 0.715484816502115i,...
        -0.715484816502116 - 1.07079869947673i,...
        -0.251244856101071 - 1.26309318727039i,...
        0.251244856101071 - 1.26309318727039i,...
        0.715484816502116 - 1.07079869947673i,...
        1.07079869947673 - 0.715484816502116i,...
        1.26309318727039 - 0.251244856101071i
      };

    labels = {'01111', '01101', '11101', '11111', '01110', '00110', '00111',...
           '00101', '00100', '01100', '11100', '10100', '10101', '10111',...
           '10110', '11110', '01011', '01010', '00010', '00011', '00001',...
           '00000', '01000', '01001', '11001', '11000', '10000', '10001',...
           '10011', '10010', '11010', '11011'};

    if mod(length(binary_sequence), 5) ~= 0
        error('The binary sequence length must be a multiple of 5 for 32-APSK conversion.');
    end
    
    % Create a map object to store bit strings as keys and their corresponding symbols as values
    bit_to_symbol_map = containers.Map(labels, complex_numbers);
    
    % Convert the input bit stream to a matrix of groups of 5 bits
    bit_groups = reshape(binary_sequence, 5, []).';
    
    % Convert each group of bits to its corresponding symbol using the mapping
    output_symbols_flat = zeros(1, size(bit_groups, 1));
    for i = 1:size(bit_groups, 1)
        bit = num2str(bit_groups(i, :));
        
        output_symbols_flat(i) = bit_to_symbol_map(strrep(bit, ' ', ''));
    end

    output_symbols = output_symbols_flat.';
end